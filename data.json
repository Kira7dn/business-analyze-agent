{
    "classes": [
        {
            "class_name": "Order",
            "description": "Represents an order in the system with its details and status.",
            "attributes": [
                "order_id: str",
                "status: str",
                "items: list",
                "total_amount: float",
                "customer_id: str"
            ],
            "methods": [
                {
                    "name": "get_details",
                    "description": "Return full order details.",
                    "parameters": [],
                    "return_type": "dict"
                },
                {
                    "name": "confirm",
                    "description": "Set the order status to 'Confirmed'.",
                    "parameters": [],
                    "return_type": "None"
                }
            ]
        },
        {
            "class_name": "OrderRepository",
            "description": "Handles data persistence and retrieval for orders.",
            "attributes": [],
            "methods": [
                {
                    "name": "fetch_pending_orders",
                    "description": "Query the database for orders with status 'Pending'.",
                    "parameters": [],
                    "return_type": "list[Order]"
                },
                {
                    "name": "get_order_by_id",
                    "description": "Retrieve a specific order by its ID.",
                    "parameters": [
                        "order_id: str"
                    ],
                    "return_type": "Order"
                },
                {
                    "name": "update_order_status",
                    "description": "Persist a new status for a given order.",
                    "parameters": [
                        "order_id: str",
                        "new_status: str"
                    ],
                    "return_type": "bool"
                }
            ]
        },
        {
            "class_name": "OrderService",
            "description": "Implements business logic for order confirmation workflows.",
            "attributes": [],
            "methods": [
                {
                    "name": "fetch_unconfirmed_orders",
                    "description": "Return all orders pending confirmation.",
                    "parameters": [],
                    "return_type": "list[Order]"
                },
                {
                    "name": "confirm_order",
                    "description": "Process confirmation of a specific order and generate feedback.",
                    "parameters": [
                        "order_id: str"
                    ],
                    "return_type": "dict"
                }
            ]
        }
    ],
    "implementation_notes": "OrderRepository maps directly to data flow steps FetchUnconfirmedOrders, GetOrderDetails, and UpdateOrderStatus. OrderService orchestrates the workflow: fetch_unconfirmed_orders() calls fetch_pending_orders(), confirm_order(order_id) retrieves order, calls order.confirm(), persists via update_order_status(), and then builds a success or error response dict for the UI."
}